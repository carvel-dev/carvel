#@data/values
---
system_namespace: cf-system
workloads_namespace: cf-workloads
staging_namespace: cf-workloads-staging

#! your system domain, e.g., "system.cf.example.com"
system_domain:
#! list of app domains, e.g., ["apps.cf.example.com"]
app_domains: []

#! password for admin user in plain text
cf_admin_password:

#! control deployment of a blobstore for CF
cf_blobstore:
  access_key: "admin"
  secret_key: ""

#! control optional deployment of a database for CF
cf_db:
  admin_password: ""
  enabled: true

#! reserved static ip for istio LoadBalancer
istio_static_ip: ""

images:
  capi: ""
  nginx: ""

system_certificate:
  #! Base64-encoded certificate for the wildcard
  #! subdomain of the system domain (e.g., CN=*.system.cf.example.com)
  crt: ""
  #! Base64-encoded private key for the system certificate
  key: ""
  #! Base64-encoded CA certificate used to sign the system certifcate
  ca: ""

workloads_certificate:
  #! Base64-encoded certificate for the wildcard
  #! subdomain of the system domain (e.g., CN=*.apps.cf.example.com)
  crt: ""
  #! Base64-encoded private key for the workloads certificate
  key: ""
  #! Base64-encoded CA certificate used to sign the workloads certifcate
  ca: ""

internal_certificate:
  #! Base64-encoded certificate for the wildcard
  #! subdomain of the system domain (e.g., CN=*.cf-system.svc.cluster.local)
  crt: ""
  #! Base64-encoded private key for the internal certificate
  key: ""
  #! Base64-encoded CA certificate used to sign the internal certifcate
  ca: ""

capi:
  blobstore:
    package_directory_key: cc-packages
    droplet_directory_key: cc-droplets
    resource_directory_key: cc-resources
    buildpack_directory_key: cc-buildpacks
    region: "''"
    endpoint: "http://cf-blobstore-minio.cf-blobstore.svc.cluster.local:9000"
  database:
    #! or mysql2, as needed
    adapter: postgres
    host: ""
    port: 5432
    user: cloud_controller
    #! DB user password in plain text
    password: ""
    name: cloud_controller

uaa:
  #! client secret for uaa admin client in plain text
  admin_client_secret: ""

  database:
    #! or mysql2, as needed
    adapter: postgresql
    host: ""
    port: 5432
    user: uaa
    #! DB user password in plain text
    password: ""
    name: uaa
    #! Plain text ca certificate for tls
    ca_cert: ""

  jwt_policy:
    key_id: "default_jwt_policy_key"
    #! Plain text private key
    signing_key: ""

  encryption_key:
    label: "default_encryption_key"
    #! Plain text passphrase
    passphrase: ""

  login:
    service_provider:
      #! Plain text private key
      key: ""
      #! Plain text password
      key_password: ""
      #! Plain text certificate
      certificate: ""

  login_secret_name: "uaa-login-secret"

log_cache_ca:
  crt: "" #! Base64-encoded ca for the log cache
  key: "" #! Base64-encoded private key for the cert above

log_cache:
  crt: "" #! Base64-encoded cert for the log cache requires CN of log-cache
  key: "" #! Base64-encoded private key for the cert above

log_cache_metrics:
  crt: "" #! Base64-encoded cert for the log cache metrics requires CN of log-cache-metrics
  key: "" #! Base64-encoded private key for the cert above

log_cache_gateway:
  crt: "" #! Base64-encoded cert for the log cache gateway requires CN of log-cache-gateway
  key: "" #! Base64-encoded private key for the cert above

log_cache_syslog:
  crt: "" #! Base64-encoded cert for the log cache syslog server requires CN of log-cache-syslog
  key: "" #! Base64-encoded private key for the cert above

app_registry:
  hostname: ""
  repository: ""
  username: ""
  password: ""

metric_proxy:
  ca:
    secret_name: "metric-proxy-ca"
    crt: ""
    key: ""
  cert:
    secret_name: "metric-proxy-cert"
    crt: ""
    key: ""
